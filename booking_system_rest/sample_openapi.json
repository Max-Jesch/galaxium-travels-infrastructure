{
  "openapi": "3.0.3",
  "info": {
    "title": "Galaxium Travels Booking API",
    "description": "API for booking flights and managing users",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://galaxium-booking-system.1xbq7f8yb8jb.us-south.codeengine.appdomain.cloud"
    }
  ],
  "paths": {
    "/flights": {
      "get": {
        "summary": "List all available flights",
        "description": "Retrieve a list of all available flights, including origin, destination, departure and arrival times, price, and the number of seats currently available for booking.",
        "operationId": "getFlights",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Flight"
                  },
                  "type": "array",
                  "title": "Response Getflights"
                }
              }
            }
          }
        }
      }
    },
    "/book": {
      "post": {
        "summary": "Book a flight for a user",
        "description": "Book a seat on a specific flight for a user. Requires user_id, name, and flight_id in the request body. If the flight has available seats and the user_id matches the name, a new booking is created and the number of available seats is decremented by one. Returns the booking details.",
        "operationId": "bookFlight",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/bookings/{user_id}": {
      "get": {
        "summary": "List all bookings for a user",
        "description": "Retrieve all bookings for a specific user by user_id. Returns a list of bookings, including booking status and booking time, for the given user.",
        "operationId": "getUserBookings",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  },
                  "title": "Response Getuserbookings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cancel/{booking_id}": {
      "post": {
        "summary": "Cancel a booking by booking ID",
        "description": "Cancel an existing booking by its booking_id. If the booking is active, its status is set to 'cancelled' and the number of available seats for the associated flight is incremented by one. Returns the updated booking details.",
        "operationId": "cancelBooking",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Register a new user with a name and unique email. Returns the created user.",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user_id": {
      "get": {
        "summary": "Get user by name and email",
        "description": "Retrieve a user's information (including user_id) by providing both name and email. Returns 404 if not found.",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Booking": {
        "properties": {
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "flight_id": {
            "type": "integer",
            "title": "Flight Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "booking_time": {
            "type": "string",
            "title": "Booking Time"
          }
        },
        "type": "object",
        "required": ["booking_id", "user_id", "flight_id", "status", "booking_time"],
        "title": "Booking"
      },
      "BookingRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "flight_id": {
            "type": "integer",
            "title": "Flight Id"
          }
        },
        "type": "object",
        "required": ["user_id", "name", "flight_id"],
        "title": "BookingRequest"
      },
      "Flight": {
        "properties": {
          "flight_id": {
            "type": "integer",
            "title": "Flight Id"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "departure_time": {
            "type": "string",
            "title": "Departure Time"
          },
          "arrival_time": {
            "type": "string",
            "title": "Arrival Time"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "seats_available": {
            "type": "integer",
            "title": "Seats Available"
          }
        },
        "type": "object",
        "required": ["flight_id", "origin", "destination", "departure_time", "arrival_time", "price", "seats_available"],
        "title": "Flight"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "User": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": ["user_id", "name", "email"],
        "title": "User"
      },
      "UserRegistration": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": ["name", "email"],
        "title": "UserRegistration"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {"type": "string"},
                {"type": "integer"}
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}